(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{510:function(t,e,a){"use strict";a.r(e);var v=a(28),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"io"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#io"}},[t._v("#")]),t._v(" IO")]),t._v(" "),a("h3",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("p",[a("strong",[t._v("I（Input）")]),t._v(" 即输入，将非内存中的数据读（输）入到内存中。")]),t._v(" "),a("p",[a("strong",[t._v("O（Output）")]),t._v(" 即输出，将内存中的数据读（输）出到非内存中。")]),t._v(" "),a("p",[a("strong",[t._v("IO 流")]),t._v(" 一种顺序读写数据的模式，是单向流动（联想水管水流）。其最小单位为  "),a("code",[t._v("byte")]),t._v("  （字节），也称字节流。Java 中最基本的两种 IO 流：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("InputStream")]),t._v("  为输入字节流；")]),t._v(" "),a("li",[a("code",[t._v("OutputStream")]),t._v("  为输出字节流。")])]),t._v(" "),a("p",[t._v("当需要读写字符，且字符不全为单字节表示的 ASCII 字符，使用  "),a("code",[t._v("char")]),t._v("  读写更为方便，称为字符流。Java 提供  "),a("code",[t._v("Reader")]),t._v("  和  "),a("code",[t._v("Writer")]),t._v("  表示字符流，其传输最小数据单位为  "),a("code",[t._v("char")]),t._v(" 。")]),t._v(" "),a("p",[t._v("本质上， "),a("code",[t._v("Reader")]),t._v("  和  "),a("code",[t._v("Writer")]),t._v("  是能够自动编 / 解码的  "),a("code",[t._v("InputStream")]),t._v("  和  "),a("code",[t._v("OutputStream")]),t._v(" ，只是前两者内部对  "),a("code",[t._v("byte")]),t._v("  和  "),a("code",[t._v("char")]),t._v("  做了转换处理。")]),t._v(" "),a("p",[t._v("也就是说，编码就是将字符转为字节，解码是将字节重新组合为字符。当二者所使用的编码方式不同时就产生了乱码。")]),t._v(" "),a("p",[t._v("使用 Reader/Writer 还是 InputStream/OutputStream，取决于具体场景。数据源非文本，只能使用  "),a("code",[t._v("InutStream")]),t._v(" ；反之， "),a("code",[t._v("Reader")]),t._v("  更方便些。 "),a("code",[t._v("Writer")]),t._v("  和 "),a("code",[t._v("OutputStream")]),t._v("  同理。")]),t._v(" "),a("p",[a("strong",[t._v("同步 IO 与异步 IO")])]),t._v(" "),a("ul",[a("li",[t._v("读写时必须依次等待数据返回后才执行后续代码，即同步 IO。代码编写简单，CPU 执行效率低。")]),t._v(" "),a("li",[t._v("读写时发出请求后能立刻执行后续代码，即异步 IO。优缺点与上述相反。")])]),t._v(" "),a("h2",{attrs:{id:"io-分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#io-分类"}},[t._v("#")]),t._v(" IO 分类")]),t._v(" "),a("h3",{attrs:{id:"对不同数据操作来看"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对不同数据操作来看"}},[t._v("#")]),t._v(" 对不同数据操作来看")]),t._v(" "),a("img",{staticStyle:{zoom:"33%"},attrs:{src:"C:\\Users\\hu\\Desktop\\数据操作.png"}}),t._v(" "),a("h3",{attrs:{id:"从传输方式来看"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从传输方式来看"}},[t._v("#")]),t._v(" 从传输方式来看")]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Chu%5CDesktop%5CJavaio%E6%B5%81%E7%B1%BB%E5%9B%BE.jpg",alt:""}})]),t._v(" "),a("p",[a("code",[t._v("字节")]),t._v("  是计算机看的， "),a("code",[t._v("字符")]),t._v("  是人看的。")]),t._v(" "),a("h2",{attrs:{id:"简单应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单应用"}},[t._v("#")]),t._v(" 简单应用")]),t._v(" "),a("h3",{attrs:{id:"file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file"}},[t._v("#")]),t._v(" File")]),t._v(" "),a("p",[t._v("Java 标准库  "),a("code",[t._v("java.io")]),t._v("  提供  "),a("code",[t._v("File")]),t._v("  类，通过该类对象操作文件和目录。")]),t._v(" "),a("p",[t._v("File 对象常见构造方法（目录或文件）")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("new File(String pathName)")])]),t._v(" "),a("li",[a("code",[t._v("new File(File parent,String child)")]),t._v("  父目录文件和子路径")]),t._v(" "),a("li",[a("code",[t._v("new File(String parent,String child)")]),t._v("  父目录和子路径")])]),t._v(" "),a("p",[t._v("构造器中可以输入绝对路径或相对路径，注意 Windows 系统分隔符需要两个反斜杠  "),a("code",[t._v("\\\\")]),t._v(" 。File 对象提供了一个静态变量  "),a("code",[t._v("File.separator")]),t._v("  用于表示当前系统的分隔符，此时无需纠结正反斜杠。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("System.out.println(File.separator); // 打印 \\ 或 /\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("构造  "),a("code",[t._v("File")]),t._v("  对象不会对硬盘进行操作，即使该文件或目录不存在。当调用  "),a("code",[t._v("File")]),t._v("  对象某些方法，才会对硬盘操作。")]),t._v(" "),a("p",[a("strong",[t._v("File 对象的一些方法：")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("isFile()")]),t._v("  文件是否已存在；")]),t._v(" "),a("li",[a("code",[t._v("isDirectory()")]),t._v("  目录是否已存在；")]),t._v(" "),a("li",[a("code",[t._v("canRead()")]),t._v(" ：是否可读；")]),t._v(" "),a("li",[a("code",[t._v("canWrite()")]),t._v(" ：是否可写；")]),t._v(" "),a("li",[a("code",[t._v("canExecute()")]),t._v(" ：是否可执行；")]),t._v(" "),a("li",[a("code",[t._v("length()")]),t._v(" ：文件字节大小；")]),t._v(" "),a("li",[a("code",[t._v("createNewFile()")]),t._v(" ：创建一个新文件；")]),t._v(" "),a("li",[a("code",[t._v("delete()")]),t._v(" ：删除空目录或文件；")]),t._v(" "),a("li",[a("code",[t._v("createTempFile(String,String)")]),t._v(" ：创建临时文件，参数为临时文件前后缀；")]),t._v(" "),a("li",[a("code",[t._v("deleteOnExit()")]),t._v(" ：JVM 退出时自动删除该文件；")]),t._v(" "),a("li",[a("code",[t._v("list()")]),t._v(" ：返回目录下的文件或者目录名；")]),t._v(" "),a("li",[a("code",[t._v("listFiles()")]),t._v(" ：返回目录下的文件或者目录对象，此外还提供重载方法，可以过滤不想要的文件和目录；")]),t._v(" "),a("li",[a("code",[t._v("boolean mkdir()")]),t._v(" ：创建 File 对象表示的目录；")]),t._v(" "),a("li",[a("code",[t._v("boolean mkdirs()")]),t._v(" ：创建 File 对象表示的目录，并在必要时将不存在的父目录也创建出来；")]),t._v(" "),a("li",[a("code",[t._v("boolean delete()")]),t._v(" ：删除 File 对象表示的目录，目录为空才能删除；")]),t._v(" "),a("li",[a("code",[t._v("getAbsolutePath()")]),t._v(" ：获取绝对路径；")]),t._v(" "),a("li",[a("code",[t._v("getParent()")]),t._v(" ：获取父目录")])]),t._v(" "),a("h3",{attrs:{id:"path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#path"}},[t._v("#")]),t._v(" Path")]),t._v(" "),a("p",[t._v("Java 标准库  "),a("code",[t._v("java.nio.file")]),t._v("  包中提供了  "),a("code",[t._v("Path")]),t._v("  类，相比  "),a("code",[t._v("File")]),t._v("  类操作更加简单。如果需要对目录进行复杂的拼接、遍历等操作，使用  "),a("code",[t._v("Path")]),t._v("  对象更方便。")]),t._v(" "),a("h3",{attrs:{id:"fileinputstream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fileinputstream"}},[t._v("#")]),t._v(" FileInputStream")]),t._v(" "),a("p",[t._v("用与从文件读取数据，构造方法的参数可以是字符串路径，也可以是一个文件对象。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tmp.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),t._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./tmp.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),t._v(" fs2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h4",{attrs:{id:"常用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("方法及描述")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("public void close() throws IOException{}")]),t._v(" 关闭此文件输入流并释放与此流有关的所有系统资源。抛出 IOException 异常。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("protected void finalize()throws IOException {}")]),t._v(" 这个方法清除与该文件的连接。确保在不再引用文件输入流时调用其 close 方法。抛出 IOException 异常。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("public int read(int r)throws IOException{}")]),t._v(" 这个方法从 InputStream 对象读取指定字节的数据。返回为整数值。返回下一字节数据，如果已经到结尾则返回 - 1。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("public int read(byte[] r) throws IOException{}")]),t._v(" 这个方法从输入流读取 r.length 长度的字节。返回读取的字节数。如果是文件结尾则返回 - 1。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("public int available() throws IOException{}")]),t._v(" 返回下一次对此输入流调用的方法可以不受阻塞地从此输入流读取的字节数。返回一个整数值。")])])])]),t._v(" "),a("h3",{attrs:{id:"fileoutputstream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fileoutputstream"}},[t._v("#")]),t._v(" FileOutputStream")]),t._v(" "),a("p",[t._v("用于创建一个文件并向文件中写数据，若文件不存在，则会创建该文件。")]),t._v(" "),a("p",[t._v("构造方法同  "),a("code",[t._v("FileInputStream")]),t._v("  类")]),t._v(" "),a("h4",{attrs:{id:"常用方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用方法-2"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("方法及描述")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("public void close() throws IOException{}")]),t._v(" 关闭此文件输入流并释放与此流有关的所有系统资源。抛出 IOException 异常。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("protected void finalize()throws IOException {}")]),t._v(" 这个方法清除与该文件的连接。确保在不再引用文件输入流时调用其 close 方法。抛出 IOException 异常。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("public void write(int w)throws IOException{}")]),t._v(" 这个方法把指定的字节写到输出流中。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("strong",[t._v("public void write(byte[] w)")]),t._v(" 把指定数组中 w.length 长度的字节写到 OutputStream 中。")])])])]),t._v(" "),a("h3",{attrs:{id:"filereader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filereader"}},[t._v("#")]),t._v(" FileReader")]),t._v(" "),a("p",[t._v("构造方法  "),a("code",[t._v("FileReader(File/String)")])]),t._v(" "),a("p",[t._v("常见方法：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Read()")]),t._v("  每次读取单个字符，返回该字符，文件末尾返回 -1；")]),t._v(" "),a("li",[a("code",[t._v("Read(char[])")]),t._v("  批量读取多个字符到数组，返回读到的字符数，文件末尾返回 -1。")])]),t._v(" "),a("p",[t._v("相关 API：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("new String(char[])")]),t._v(" ：将 char [] 转换成  "),a("code",[t._v("String")]),t._v(" ；")]),t._v(" "),a("li",[a("code",[t._v("new String(char[],offset,len)")]),t._v(" ：将  "),a("code",[t._v("char[]")]),t._v("  的指定部分转为  "),a("code",[t._v("String")]),t._v(" 。")])]),t._v(" "),a("h3",{attrs:{id:"filewriter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filewriter"}},[t._v("#")]),t._v(" FileWriter")]),t._v(" "),a("p",[t._v("构造方法：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("FileWriter(File/String)")]),t._v(" ：覆盖模式，流的指针在首端；")]),t._v(" "),a("li",[a("code",[t._v("FileWriter(File/String,true)")]),t._v(" ：追加模式，流的指针在尾端。")])]),t._v(" "),a("p",[t._v("常见方法：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("write(int)")]),t._v(" ：写入单个字符；")]),t._v(" "),a("li",[a("code",[t._v("write(char[])")]),t._v(" ：写入指定数组；")]),t._v(" "),a("li",[a("code",[t._v("write(char[],off,len)")]),t._v(" ：写入指定数组的指定部分；")]),t._v(" "),a("li",[a("code",[t._v("write(String)")]),t._v(" ：写入整个字符串；")]),t._v(" "),a("li",[a("code",[t._v("write(String,off,len)")]),t._v(" ：写入整个字符串指定部分。")])]),t._v(" "),a("p",[t._v("相关 API（String 类）：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("toCharArray()")]),t._v(" ：将  "),a("code",[t._v("String")]),t._v("  转为  "),a("code",[t._v("char[]")]),t._v(" 。")])]),t._v(" "),a("p",[a("code",[t._v("FileWriter")]),t._v("  使用后必须关闭（ "),a("code",[t._v("close()")]),t._v(" ）或刷新（ "),a("code",[t._v("flush()")]),t._v(" ），否则写入不到指定文件。")]),t._v(" "),a("h3",{attrs:{id:"节点流与处理流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节点流与处理流"}},[t._v("#")]),t._v(" 节点流与处理流")]),t._v(" "),a("p",[t._v("节点流可以从特定的数据源读写数据，处理流（包装流）是 “连接” 在已存在的流（节点流或处理流）之上，提供更强大的读写功能，更加灵活。")]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Chu%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220626213930066.png",alt:"image-20220626213930066"}})]),t._v(" "),a("h2",{attrs:{id:"流的关闭"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流的关闭"}},[t._v("#")]),t._v(" 流的关闭")]),t._v(" "),a("h3",{attrs:{id:"关闭条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭条件"}},[t._v("#")]),t._v(" 关闭条件")]),t._v(" "),a("p",[t._v("对于输入流，当前对象不再接收数据时，即可关闭。")]),t._v(" "),a("p",[t._v("而对于输出流：")]),t._v(" "),a("ol",[a("li",[t._v("输出的内容为空；")]),t._v(" "),a("li",[t._v("输出的对象没有关闭；")]),t._v(" "),a("li",[t._v("关闭前清空缓存区（调用  "),a("code",[t._v("flush()")]),t._v("  方法）")])]),t._v(" "),a("p",[t._v("满足上述情况即可关闭。")]),t._v(" "),a("h3",{attrs:{id:"关闭原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭原则"}},[t._v("#")]),t._v(" 关闭原则")]),t._v(" "),a("p",[t._v("一般情况下，先开后关，后开先关。")]),t._v(" "),a("p",[t._v("另一种情况，假设流  "),a("code",[t._v("a")]),t._v("  依赖 流  "),a("code",[t._v("b")]),t._v(" ，则先关流  "),a("code",[t._v("a")]),t._v("  再关流  "),a("code",[t._v("b")])]),t._v(" "),a("h2",{attrs:{id:"properties-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#properties-类"}},[t._v("#")]),t._v(" Properties 类")]),t._v(" "),a("p",[a("code",[t._v(".properties")]),t._v("  类型文件是一种配置文件，里面存储了一些配置信息。")]),t._v(" "),a("div",{staticClass:"language-properties line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("键")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[t._v("值")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("在文件中使用  "),a("code",[t._v("键=值")]),t._v("  的格式，无需空格与引号，默认为  "),a("code",[t._v("String")]),t._v("  类型。")]),t._v(" "),a("p",[a("code",[t._v("Properties")]),t._v("  类的构造方法")])])}),[],!1,null,null,null);e.default=_.exports}}]);